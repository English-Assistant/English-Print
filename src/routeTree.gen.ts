/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WorkbookRouteImport } from './routes/workbook'
import { Route as PreclassGuideRouteImport } from './routes/preclass-guide'
import { Route as PaperManagementRouteImport } from './routes/paper-management'
import { Route as PaperRouteImport } from './routes/paper'
import { Route as AnswerRouteImport } from './routes/answer'
import { Route as IndexRouteImport } from './routes/index'

const WorkbookRoute = WorkbookRouteImport.update({
  id: '/workbook',
  path: '/workbook',
  getParentRoute: () => rootRouteImport,
} as any)
const PreclassGuideRoute = PreclassGuideRouteImport.update({
  id: '/preclass-guide',
  path: '/preclass-guide',
  getParentRoute: () => rootRouteImport,
} as any)
const PaperManagementRoute = PaperManagementRouteImport.update({
  id: '/paper-management',
  path: '/paper-management',
  getParentRoute: () => rootRouteImport,
} as any)
const PaperRoute = PaperRouteImport.update({
  id: '/paper',
  path: '/paper',
  getParentRoute: () => rootRouteImport,
} as any)
const AnswerRoute = AnswerRouteImport.update({
  id: '/answer',
  path: '/answer',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/answer': typeof AnswerRoute
  '/paper': typeof PaperRoute
  '/paper-management': typeof PaperManagementRoute
  '/preclass-guide': typeof PreclassGuideRoute
  '/workbook': typeof WorkbookRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/answer': typeof AnswerRoute
  '/paper': typeof PaperRoute
  '/paper-management': typeof PaperManagementRoute
  '/preclass-guide': typeof PreclassGuideRoute
  '/workbook': typeof WorkbookRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/answer': typeof AnswerRoute
  '/paper': typeof PaperRoute
  '/paper-management': typeof PaperManagementRoute
  '/preclass-guide': typeof PreclassGuideRoute
  '/workbook': typeof WorkbookRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/answer'
    | '/paper'
    | '/paper-management'
    | '/preclass-guide'
    | '/workbook'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/answer'
    | '/paper'
    | '/paper-management'
    | '/preclass-guide'
    | '/workbook'
  id:
    | '__root__'
    | '/'
    | '/answer'
    | '/paper'
    | '/paper-management'
    | '/preclass-guide'
    | '/workbook'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnswerRoute: typeof AnswerRoute
  PaperRoute: typeof PaperRoute
  PaperManagementRoute: typeof PaperManagementRoute
  PreclassGuideRoute: typeof PreclassGuideRoute
  WorkbookRoute: typeof WorkbookRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/workbook': {
      id: '/workbook'
      path: '/workbook'
      fullPath: '/workbook'
      preLoaderRoute: typeof WorkbookRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preclass-guide': {
      id: '/preclass-guide'
      path: '/preclass-guide'
      fullPath: '/preclass-guide'
      preLoaderRoute: typeof PreclassGuideRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/paper-management': {
      id: '/paper-management'
      path: '/paper-management'
      fullPath: '/paper-management'
      preLoaderRoute: typeof PaperManagementRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/paper': {
      id: '/paper'
      path: '/paper'
      fullPath: '/paper'
      preLoaderRoute: typeof PaperRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/answer': {
      id: '/answer'
      path: '/answer'
      fullPath: '/answer'
      preLoaderRoute: typeof AnswerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnswerRoute: AnswerRoute,
  PaperRoute: PaperRoute,
  PaperManagementRoute: PaperManagementRoute,
  PreclassGuideRoute: PreclassGuideRoute,
  WorkbookRoute: WorkbookRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
